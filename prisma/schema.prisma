// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  fullname   String?
  password   String
  role       Role        @default(USER)
  ResetToken ResetToken?

  businessAccount BusinessAccount?

  isTwoFactorEnabled    Boolean                @default(false)
  twoFactorConfirmation TwoFactorConfirmation?

  rendezvous   Rendezvous[]
}

model ResetToken {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  token     String   @unique
  createdAt DateTime @default(now())
}

enum Role {
  USER
  BUSINESS
}

model TwoFactorToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  expiresAt DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id     Int @id @default(autoincrement())
  userId Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model BusinessAccount {
  id         Int     @id @default(autoincrement())
  profession String
  name       String  @unique
  location   String?
  image      String?
  userId     Int
  bio        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  ContactForm     ContactForm[]
  GuestRendezvous GuestRendezvous[]
  Rendevous       Rendezvous[]

  @@unique([userId])
}

model ContactForm {
  id         Int             @id @default(autoincrement())
  mail       String
  subject    String?
  message    String?
  createdAt  DateTime        @default(now())
  businessId Int
  business   BusinessAccount @relation(fields: [businessId], references: [id], onDelete: Cascade)
}

model GuestRendezvous {
  id           Int             @id @default(autoincrement())
  fullName     String?
  email        String
  phoneNumber  String?
  message      String?
  isCancelled  Boolean         @default(false)
  rendezvousAt DateTime
  businessId   Int
  business     BusinessAccount @relation(fields: [businessId], references: [id], onDelete: Cascade)
  createdAt    DateTime        @default(now())
}

model Rendezvous {
  id           Int      @id @default(autoincrement())
  fullName     String?
  email        String
  phoneNumber  String?
  message      String?
  isCancelled  Boolean  @default(false)
  rendezvousAt DateTime
  createdAt    DateTime @default(now())

  businessId Int
  userId     Int

  business BusinessAccount @relation(fields: [businessId], references: [id], onDelete: Cascade)
  user     User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}
